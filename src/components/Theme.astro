---
import {Image} from "astro:assets";
import Dark from "../assets/icons/dark-mode.svg";
import Light from "../assets/icons/light-mode.svg";
---

<button id="theme-toggle" onclick="changeTheme()">
    <Image src={Dark} alt="Theme icon" id="theme-icon" loading="eager"/>
</button>

<style>
    button img{
        width: 1.75em;
        height: auto;
        transition: transform 0.4s ease-in-out, opacity 0.4s ease-in-out;
    }
    button{
        width: 3.5em;
        height: 3em;
        display: flex;
        justify-content: center;
        align-items: center;
        border: none;
        border-radius: 30%;
        transition: all 0.4s ease;
    }
    button:hover{
        cursor: pointer;
        transform: scale(0.9);
        transition: all 0.4s ease;
    }
    .rotate{
        transform: rotate(180deg);
    }
</style>

<script>
    import Dark from "../assets/icons/dark-mode.svg";
    import Light from "../assets/icons/light-mode.svg";

    // Fonction pour charger le thème actuel depuis le localStorage
    function setTheme(theme: string) {
        const imgMode = document.getElementById('theme-icon') as HTMLImageElement;
        if (!imgMode) return;
        if (theme === 'light') {
            imgMode.classList.remove('rotate');
            imgMode.src =Dark.src;
            
        } else {
            imgMode.classList.remove('rotate');
            imgMode.src =Light.src;
        }
        localStorage.setItem('theme', theme);
    }

    // Fonction pour changer le thème au clic du bouton
    function changeTheme() {
        const currentTheme = localStorage.getItem('theme') || 'light';
        const newTheme = currentTheme === 'light' ? 'dark' : 'light';
        const imgMode = document.getElementById('theme-icon') as HTMLImageElement;
        if (!imgMode) return;
        if (newTheme === 'light') {
            imgMode.classList.add('rotate');
            setTimeout(()=>{
                imgMode.src =Dark.src;
                imgMode.classList.remove('rotate');
            },200);
            
        } else {
            imgMode.classList.add('rotate');
            setTimeout(()=>{
                imgMode.src =Light.src;
                imgMode.classList.remove('rotate');
            },200);
        }
        localStorage.setItem('theme', newTheme);
    }

    // Exposer la fonction changeTheme au monde extérieur
    (window as any).changeTheme = changeTheme;
    
    // Appliquer le bon thème au chargement de la page
    setTheme(localStorage.getItem('theme') || 'light');

    // IMPORTANT : Écouter les changements de page avec Astro
    document.addEventListener('astro:after-swap', () => {
        setTheme(localStorage.getItem('theme') || 'light'); // Réappliquer le thème après chaque transition de page
    });
</script>